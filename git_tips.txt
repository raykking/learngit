git 分布式版本控制
linux install git:
$ git
The program 'git' is currently not installed. You can install it by typing:
sudo apt-get install git

如果是其他Linux版本，可以直接通过源码安装。先从Git官网下载源码，
然后解压，依次输入：
$ ./config
$ make
$ sudo make install
这几个命令安装就好了。

Mac OS install git:
一是安装homebrew，然后通过homebrew安装Git，具体方法请参考homebrew的文档：
http://brew.sh/。

第二种方法更简单，也是推荐的方法，就是直接从AppStore安装Xcode，Xcode集成了Git，
不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”->“Preferences”，
在弹出窗口中找到“Downloads”，选择“Command Line Tools”，
点“Install”就可以完成安装了。


Windows install git:
在Windows上使用Git，可以从Git官网直接下载安装程序，然后按默认选项安装即可。
安装完成后，还需要最后一步设置，在命令行输入：

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"


create repository
use git bash
$ mkdir learngit
$ cd learngit
$ pwd
initialize repository:
$ git init
add file to repository:
$ git add git_tipd.txt
$ git commit -m "wrote a readme file"
git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，
当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。
(commit可以一次提交很多文件，你可以多次add不同的文件，比如：
$ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files.")


modify files:
see what status now
$ git status
git status命令可以让我们时刻掌握仓库当前的状态，
上面的命令输出告诉我们，xx.txt被修改过了，但还没有准备提交的修改。
$ git diff
or
$ git diff git_tipd.txt
to see what changed
after modified file, then add and check status and commit
$ git add git_tips.txt
$ git status
$ git commit -m "changes once"

go back to old version:
版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用git log命令查看：
$ git log
$ git log --pretty=oneline
d056af6bc106051c108a3772fb761da723b7f9f2 (HEAD -> master) go back
ac2d928dc2bfa01c743714a0717da0bfb5342f0d change once
e40faa2b1a9fb88633a727aeb65ae7522f21c032 wrote a tips file
在Git中，用HEAD表示当前版本,上一个版本就是HEAD^，
上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。
go back to "change once":
$ git reset --hard HEAD^
